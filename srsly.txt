warning: unused import: `combine`
 --> src\simulator\parser.rs:4:5
  |
4 | use combine::*;
  |     ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `sim`
 --> src\main.rs:7:13
  |
7 |     let mut sim = simulator::Simulator::new()
  |             ^^^ help: consider prefixing with an underscore: `_sim`
  |
  = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `state`
  --> src\simulator\parser.rs:70:13
   |
70 |     let mut state = State::Text;
   |             ^^^^^ help: consider prefixing with an underscore: `_state`

warning: unused variable: `code`
  --> src\simulator\parser.rs:71:13
   |
71 |     let mut code = Vec::<Instruction>::new();
   |             ^^^^ help: consider prefixing with an underscore: `_code`

warning: unused variable: `data`
  --> src\simulator\parser.rs:72:13
   |
72 |     let mut data = Vec::<u8>::new();
   |             ^^^^ help: consider prefixing with an underscore: `_data`

warning: unused variable: `labels`
  --> src\simulator\parser.rs:73:13
   |
73 |     let mut labels = Trie::<String, usize>::new();
   |             ^^^^^^ help: consider prefixing with an underscore: `_labels`

warning: unused variable: `line_number`
  --> src\simulator\parser.rs:75:10
   |
75 |     for (line_number, line) in lines.enumerate() {
   |          ^^^^^^^^^^^ help: consider prefixing with an underscore: `_line_number`

warning: unused variable: `line`
  --> src\simulator\parser.rs:75:23
   |
75 |     for (line_number, line) in lines.enumerate() {
   |                       ^^^^ help: consider prefixing with an underscore: `_line`

warning: variable does not need to be mutable
 --> src\main.rs:7:9
  |
7 |     let mut sim = simulator::Simulator::new()
  |         ----^^^
  |         |
  |         help: remove this `mut`
  |
  = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> src\main.rs:11:9
   |
11 |     let mut memory = simulator::Memory::new();
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src\simulator\mod.rs:74:13
   |
74 |         let mut file = File::open(path)?;
   |             ----^^^^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> src\simulator\mod.rs:75:13
   |
75 |         let mut lines = io::BufReader::new(file).lines();
   |             ----^^^^^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> src\simulator\parser.rs:70:9
   |
70 |     let mut state = State::Text;
   |         ----^^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src\simulator\parser.rs:71:9
   |
71 |     let mut code = Vec::<Instruction>::new();
   |         ----^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src\simulator\parser.rs:72:9
   |
72 |     let mut data = Vec::<u8>::new();
   |         ----^^^^
   |         |
   |         help: remove this `mut`

warning: variable does not need to be mutable
  --> src\simulator\parser.rs:73:9
   |
73 |     let mut labels = Trie::<String, usize>::new();
   |         ----^^^^^^
   |         |
   |         help: remove this `mut`

warning: enum is never used: `PreLabelInstruction`
  --> src\simulator\parser.rs:28:6
   |
28 | enum PreLabelInstruction {
   |      ^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: struct is never constructed: `Parsed`
  --> src\simulator\parser.rs:38:12
   |
38 | pub struct Parsed {
   |            ^^^^^^

warning: type alias is never used: `ParseResult`
  --> src\simulator\parser.rs:56:1
   |
56 | pub type ParseResult = Result<Parsed, Error>;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: enum is never used: `State`
  --> src\simulator\parser.rs:59:6
   |
59 | enum State {
   |      ^^^^^

warning: function is never used: `parse_lines`
  --> src\simulator\parser.rs:65:8
   |
65 | pub fn parse_lines<S, T>(lines: T) -> ParseResult
   |        ^^^^^^^^^^^

warning: function is never used: `parse_file`
  --> src\simulator\parser.rs:81:8
   |
81 | pub fn parse_file(path: impl AsRef<Path>) -> ParseResult {
   |        ^^^^^^^^^^

warning: field is never read: `registers`
  --> src\simulator\mod.rs:18:5
   |
18 |     registers: [u32; 32],
   |     ^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `floats`
  --> src\simulator\mod.rs:19:5
   |
19 |     floats: [f32; 32],
   |     ^^^^^^^^^^^^^^^^^

warning: field is never read: `status`
  --> src\simulator\mod.rs:20:5
   |
20 |     status: Vec<u32>, // I'm not sure myself how many status register I'll use
   |     ^^^^^^^^^^^^^^^^

warning: method is never used: `get_register`
  --> src\simulator\mod.rs:32:5
   |
32 |     pub fn get_register<T: FromRegister>(&self, i: usize) -> T {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `set_register`
  --> src\simulator\mod.rs:36:5
   |
36 |     pub fn set_register<T: IntoRegister>(&mut self, i: usize, x: T) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `data`
  --> src\simulator\mod.rs:46:5
   |
46 |     data: Vec<u8>,
   |     ^^^^^^^^^^^^^

warning: field is never read: `register_bank`
  --> src\simulator\mod.rs:59:5
   |
59 |     register_bank: RegisterBank,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `memory`
  --> src\simulator\mod.rs:60:5
   |
60 |     memory: Memory,
   |     ^^^^^^^^^^^^^^

warning: field is never read: `code`
  --> src\simulator\mod.rs:61:5
   |
61 |     code: Vec<parser::Instruction>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    Finished dev [unoptimized + debuginfo] target(s) in 0.18s
     Running `target\debug\fpgrars.exe`
